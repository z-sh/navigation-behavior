<Events startTimestamp="1574372282356" logVersion="0.11.0.201504031625" osName="Windows 10" osVersion="10.0" lineSeparator="\r\n" numMonitors="1" monitorBounds="[0, 0, 1920, 1080]">
  <Command __id="0" _type="ShellBoundsCommand" bounds="[-8, -8, 1936, 1056]" timestamp="16" />
  <Command __id="1" _type="FileOpenCommand" docASTNodeCount="260" docActiveCodeLength="2374" docExpressionCount="151" docLength="3681" projectName="MineSweeper" timestamp="64">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeper.java]]></filePath>
    <snapshot><![CDATA[/*
BUG REPORT #1
When you start the MineSweeper program, if you click on the New Game button, it will crash.
*/

package logic;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

import presentation.CustomMenu;
import presentation.MineSweeperGui;

/**
 * Main launcher class for MineSweeper, containing all the menus and general
 * prompts
 *
 * @author  KnightMiner
 */

public class MineSweeper {
    // currently running instance of the game
    private static MineSweeperGui gui;

    /**
     * Primary way to boot the game
     * @param args  Default args (unused)
     */
    
    public static void main(String[] args) {
        // High DPI stuff
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch(Exception e) {
            e.printStackTrace();
        }

        // load the help panels
        // this has a side effect of loading the icons for the pieces
        Help.load();

        // start the game on easy
        newGame(Difficulty.EASY);
    }

    /**
     * Creates a new MineSweeper game with one of three default sizes or custom
     * @param difficulty Game difficulty
     */
    
    public static void newGame(Difficulty difficulty) {
        // difficulty switch
        MineSweeperBoard board = null;
        switch(difficulty) {
            case EASY:
                board = new MineSweeperBoard(9, 9, 10, 0);
                break;
            case NORMAL:
                board = new MineSweeperBoard(16, 16, 40, 1);
                break;
            case HARD:
                board = new MineSweeperBoard(30, 16, 99, 3);
                break;
            case CUSTOM:
                board = customGame();
                break;
        }

        startGame(board);
    }

    /**
     * Creates a new game with the custom size
     * @return  A board of the custom size
     */
    
    public static MineSweeperBoard customGame() {
        CustomMenu menu = new CustomMenu();

        int result = JOptionPane.showConfirmDialog(null, menu,
                "Custom", JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE);

        // if they pressed OK
        if(result == JOptionPane.OK_OPTION) {
            return menu.createBoard();
        }
        else {
            return null;
        }
    }

    /**
     * Starts a new game with the specified board
     * @param board  Game board to start
     */
    
    public static void startGame(MineSweeperBoard board) {
        // must be a valid board
        if(board != null) {
            // remove the current gui and define the new one
            if(gui != null) {
                gui.dispose();
            }

            // create a new instance
            gui = new MineSweeperGui(board);
        }
    }

    /**
     * List of buttons for the GUI
     */
    
    public enum Difficulty {
        /** Easy game */
        EASY("Easy"),
        /** Normal game */
        NORMAL("Normal"),
        /** Hard game */
        HARD("Expert"),
        /** Custom size and mines from the GUI */
        CUSTOM("Custom");

        // data
        private String label;

        /**
         * Default constructor
         * @param  Button label
         */
        
        Difficulty(String label) {
            this.label = label;
        }

        /**
         * Gets the label for the difficulty
         * @return  Difficulty name
         */
        
        public String getLabel() {
            return label;
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="2" _type="SelectTextCommand" caretOffset="447" docEnd="651" docOffset="651" docStart="647" end="447" start="443" timestamp="468" />
  <Command __id="3" _type="MoveCaretCommand" caretOffset="13" docOffset="17" timestamp="37206" />
  <Command __id="4" _type="RunCommand" kind="Create" projectName="MineSweeper" timestamp="46796" type="Run" />
  <Command __id="5" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="66231">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
    <snapshot><![CDATA[package presentation;
import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.io.File;
import java.net.URL;
import java.util.Queue;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

import logic.Help;
import logic.MineSweeper;
import logic.MineSweeperBoard;
import util.Space;

/**
 * Main GUI object for Minesweeper games. Called when gameplay is ready
 *
 * @author  KnightMiner
 */

public class MineSweeperGui extends JFrame implements ActionListener {
    // data
    private MineSweeperBoard board;

    // states
    private boolean isCheating;

    // buttons and labels
    private JLabel mines;
    private MineButton[][] buttons;

    private JButton buttonNewGame;
    private JButton buttonCheat;

    // menus
    private JMenuBar bar;
    private JMenu menuMineSweeper;

    private JMenu menuNewGame;
    private JMenuItem buttonRestart;
    private JMenuItem buttonSave;
    private JMenuItem buttonLoad;
    private JMenuItem buttonExit;

    private JMenu menuHelp;
    private JMenuItem buttonRules;
    private JMenuItem buttonMenu;
    private JMenuItem buttonDifficulty;

    /**
     * Makes a new minesweaper window
     * @param board  Input board, the display will take the size and pieces on the board
     */
    
    public MineSweeperGui(MineSweeperBoard board) {
        this.setTitle("MineSweeper");
        this.board = board;

        // construct the top menu
        bar = new JMenuBar();
        setJMenuBar(bar);

        // miscelanous actions
        menuMineSweeper = new JMenu("MineSweeper");
        bar.add(menuMineSweeper);

        // new game menu
        menuNewGame = new JMenu("New Game");
        menuMineSweeper.add(menuNewGame);

        // add all difficulties
        for(MineSweeper.Difficulty difficulty : MineSweeper.Difficulty.values()) {
            DifficultyButton button = new DifficultyButton(difficulty);
            menuNewGame.add(button);
        }


        // restarts the current game
        buttonRestart = new JMenuItem("Restart");
        buttonRestart.addActionListener(this);
        menuMineSweeper.add(buttonRestart);

        // saves the current game
        buttonSave = new JMenuItem("Save game");
        buttonSave.addActionListener(this);
        menuMineSweeper.add(buttonSave);

        // loads a new game from a file
        buttonLoad = new JMenuItem("Load game");
        buttonLoad.addActionListener(this);
        menuMineSweeper.add(buttonLoad);

        // exits the game
        menuMineSweeper.addSeparator();
        buttonExit = new JMenuItem("Exit");
        buttonExit.addActionListener(this);
        menuMineSweeper.add(buttonExit);

        // help menu
        menuHelp = new JMenu("Help");
        bar.add(menuHelp);

        // shows the rules
        buttonRules = new JMenuItem("Rules");
        buttonRules.addActionListener(this);
        menuHelp.add(buttonRules);

        // shows help about the menu
        buttonMenu = new JMenuItem("Menus");
        buttonMenu.addActionListener(this);
        menuHelp.add(buttonMenu);

        // shows available difficulties
        buttonDifficulty = new JMenuItem("Difficulties");
        buttonDifficulty.addActionListener(this);
        menuHelp.add(buttonDifficulty);


        // GUI Layout

        // gives use four regions and a center
        Container pane = getContentPane();
        pane.setLayout(new BorderLayout());


        // new game with same dimensions
        buttonNewGame = new JButton("New game");
        buttonNewGame.addActionListener(this);

        // remaining mines display
        mines = new JLabel("Mines", SwingConstants.CENTER);
        updateMines();

        // top row of the board
        Container top = new Container();
        top.setLayout(new GridLayout(1, 3));
        top.add(mines);
        top.add(buttonNewGame);


        // cheating, skip if 0 cheats to start
        if(board.canCheat()) {
            buttonCheat = new JButton();
            updateCheat();
            buttonCheat.addActionListener(this);
            top.add(buttonCheat);
        } else {
            top.add(new JLabel(""));
        }

        top.setPreferredSize(new Dimension(20, top.getFontMetrics(buttonNewGame.getFont()).getHeight() * 2));

        pane.add(top, BorderLayout.NORTH);


        // main button grid
        Container minesContainer = new Container();
        int width2 = board.getWidth();
        int height2 = board.getHeight();
        minesContainer.setLayout(new GridLayout(height2, width2));
        buttons = new MineButton[height2][width2];

        // and add them all
        for(int y = 0; y < height2; y++) {
            for(int x = 0; x < width2; x++) {
                // add buttons, and store them
                buttons[y][x] = new MineButton(this, board, new Space(x, y));
                minesContainer.add(buttons[y][x]);
            }
        }

        pane.add(minesContainer, BorderLayout.CENTER);


        // sizes, we need them for the top bar
        int width = board.getWidth() * 40;
        int height = board.getHeight() * 40 + 100;

        setSize(width, height);
        setVisible(true);

        // eventually I will replace this with an event that fires a prompt
        // basically, allow the user to save their game before quitting
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /**
     * Gets a MineButton at the specified location
     * @param space  Location of the button
     * @return  the button at the location
     */
    
    public MineButton getButton(Space space) {
        if(!board.isValid(space)) {
            return null;
        }
        return buttons[space.getY()][space.getX()];
    }

    /**
     * Updates all spaces pending update to display their current value
     */
    
    public void updateSpaces() {
        Queue<Space> queue = board.getUpdates();
        while(!queue.isEmpty()) {
            Space space = queue.poll();
            MineButton update = getButton(space);
            if(update != null) {
                update.updatePiece();
            }
        }

        updateMines();
    }

    /**
     * Updates the mines display
     */
    
    public void updateMines() {
        mines.setText(String.format("Mines: %d", board.getRemainingMines()));
    }

    /**
     * Sets the cheat status
     * @param cheat  Whether the user is in cheat mode
     */
    
    private void setCheating(boolean cheat) {
        // and change the button text
        if(cheat) {
            buttonCheat.setText("Cancel cheat");
            isCheating = true;
        }
        // otherwise, run general cheating code
        else {
            updateCheat();
        }
    }

    /**
     * Sets the cheat button to used
     */
    
    public void updateCheat() {
        // if we can cheat, set the label
        if(board.canCheat()) {
            buttonCheat.setText("Cheats: " + board.getCheats());
            buttonCheat.setEnabled(true);
        }
        // otherwise, set the out of cheats label
        else {
            buttonCheat.setText("Out of cheats");
            buttonCheat.setEnabled(false);
        }
        isCheating = false;
    }

    /**
     * Sets the cheat button to used
     */
    
    public void resetButtons() {
        buttonNewGame.setText("New game");

        updateCheat();
        updateSpaces();
    }

    /**
     * Sets the winning text
     * @param victory  Whether the player won
     */
    
    public void gameOver(boolean victory) {
        if(victory) {
            buttonNewGame.setText("You Win!");
        }
        else {
            buttonNewGame.setText("You Lose");
        }
    }

    /**
     * Checks if the cheat button is active
     * @return  true if the cheat button is active
     */
    
    public boolean isCheating() {
        return isCheating;
    }

    /**
     * Called when the 'X' button is pressed on the window
     * @param e  Event the button is called with
     */
    
    public void windowClosing(WindowEvent e) {
        // simply run the menu
        //this.menu();
    }

    /**
     * Handles all single instance buttons
     * @param e  Calling event
     */
    
    @Override
    public void actionPerformed(ActionEvent e) {
        Object button = e.getSource();

        // restart the current game
        if(button == buttonNewGame) {
            // make the board new
            board.newGame();

            // and clear game data
            resetButtons();
            return;
        }

        // restart the current game
        if(button == buttonRestart) {
            // make the board new
            board.restart();

            // and clear game data
            resetButtons();
            return;
        }

        // saves the game
        if(button == buttonSave) {
            String filename = JOptionPane.showInputDialog(this,
                    "Enter filename to save game",
                    "MineSweeper - Save game",
                    JOptionPane.QUESTION_MESSAGE
                    );

            // user canceled
            if(filename == null || filename.equals("")) {
                return;
            }

            // if it exists, prompt to continue
            if(new File(filename + ".bin").exists()) {
                int result = JOptionPane.showConfirmDialog(this,
                        "Save game " + filename + " already exists, overwrite?",
                        "MineSweeper - Save game",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.ERROR_MESSAGE
                        );

                if(result != JOptionPane.YES_OPTION) {
                    return;
                }
            }

            board.saveGame(filename);
        }

        // loads the game
        if(button == buttonLoad) {
            String filename = JOptionPane.showInputDialog(this,
                    "Enter filename to load game",
                    "MineSweeper - Load game",
                    JOptionPane.QUESTION_MESSAGE
                    );

            // user canceled
            if(filename == null || filename.equals("")) {
                return;
            }

            // if it exists, prompt to continue
            if(new File(filename + ".bin").exists()) {
                MineSweeperBoard board = MineSweeperBoard.loadGame(filename);
                if(board != null) {
                    MineSweeper.startGame(board);
                }
                // did not load right
                else {
                    JOptionPane.showMessageDialog(this,
                            "Error reading save game " + filename,
                            "MineSweeper - Load game",
                            JOptionPane.ERROR_MESSAGE
                            );
                }
            }
            else {
                // file does not exist
                JOptionPane.showMessageDialog(this,
                        "Saved game " + filename + " does not exist",
                        "MineSweeper - Load game",
                        JOptionPane.ERROR_MESSAGE
                        );
            }
        }

        // cheat button
        if(button == buttonCheat) {
            // no cheating too many times
            if(!board.canCheat()) {
                return;
            }

            // toggle cheating
            setCheating(!isCheating);
            return;
        }

        // cheat button
        if(button == buttonExit) {
            this.dispose();
            return;
        }


        /* Help */

        // rules
        if(button == buttonRules) {
            Help.showRules(this);
        }

        // menus
        if(button == buttonMenu) {
            Help.menuHelp(this);
        }

        // rules
        if(button == buttonDifficulty) {
            Help.difficultyHelp(this);
        }
    }

    /**
     * Returns an ImageIcon, or null if the path was invalid.
     * @author  Larry Vail
     * @param  path  Icon path
     * @param  description  Basic description of the icon
     * @return  Returns the icon at the path, or null if the path is invalid
     */
    
    protected ImageIcon createImageIcon(String path, String description) {
        URL imgURL = getClass().getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL, description);
        } else {
            System.err.println("Couldn't find file: " + path);
            return null;
        }
    }

    /**
     * Common code for difficulty buttons
     */
    
    private class DifficultyButton extends JMenuItem implements ActionListener {
        // data
        private MineSweeper.Difficulty difficulty;

        public DifficultyButton(MineSweeper.Difficulty difficulty) {
            super(difficulty.getLabel());

            this.difficulty = difficulty;
            this.addActionListener(this);
        }

        /**
         * Called when the button is clicked
         */
        
        @Override
        public void actionPerformed(ActionEvent e) {
            MineSweeper.newGame(difficulty);
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="6" _type="SelectTextCommand" caretOffset="8541" docEnd="9182" docOffset="9182" docStart="9155" end="8541" start="8514" timestamp="66342" />
  <Command __id="7" _type="MoveCaretCommand" caretOffset="7078" docOffset="7719" timestamp="74724" />
  <Command __id="8" _type="MoveCaretCommand" caretOffset="7080" docOffset="7721" timestamp="75281" />
  <Command __id="9" _type="MoveCaretCommand" caretOffset="7081" docOffset="7722" timestamp="76161" />
  <Command __id="10" _type="MoveCaretCommand" caretOffset="7030" docOffset="7671" timestamp="85474" />
  <Command __id="11" _type="MoveCaretCommand" caretOffset="7125" docOffset="7766" timestamp="89481" />
  <Command __id="12" _type="MoveCaretCommand" caretOffset="7081" docOffset="7722" timestamp="90770" />
  <Command __id="13" _type="MoveCaretCommand" caretOffset="7071" docOffset="7712" timestamp="104235" />
  <Command __id="14" _type="MoveCaretCommand" caretOffset="7058" docOffset="7699" timestamp="106514" />
  <Command __id="15" _type="SelectTextCommand" caretOffset="7063" docEnd="7704" docOffset="7704" docStart="7697" end="7063" start="7056" timestamp="106731" />
  <Command __id="16" _type="FileOpenCommand" projectName="null" timestamp="109312">
    <filePath><![CDATA[null]]></filePath>
  </Command>
  <Command __id="17" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.open.editor" timestamp="109333" />
  <Command __id="18" _type="MoveCaretCommand" caretOffset="0" docOffset="0" timestamp="109385" />
  <Command __id="19" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="113529">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="20" _type="SelectTextCommand" caretOffset="7063" docEnd="7704" docOffset="7704" docStart="7697" end="7063" start="7056" timestamp="113627" />
  <Command __id="21" _type="FileOpenCommand" docASTNodeCount="260" docActiveCodeLength="2374" docExpressionCount="151" docLength="3681" projectName="MineSweeper" timestamp="114650">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeper.java]]></filePath>
  </Command>
  <Command __id="22" _type="MoveCaretCommand" caretOffset="17" docOffset="17" timestamp="114688" />
  <Command __id="23" _type="MoveCaretCommand" caretOffset="1312" docOffset="1415" timestamp="130665" />
  <Command __id="24" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="150783">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="25" _type="SelectTextCommand" caretOffset="7063" docEnd="7704" docOffset="7704" docStart="7697" end="7063" start="7056" timestamp="150841" />
  <Command __id="26" _type="MoveCaretCommand" caretOffset="7081" docOffset="7722" timestamp="156377" />
  <Command __id="27" _type="MoveCaretCommand" caretOffset="7052" docOffset="7693" timestamp="159930" />
  <Command __id="28" _type="SelectTextCommand" caretOffset="7055" docEnd="7696" docOffset="7696" docStart="7685" end="7055" start="7044" timestamp="160065" />
  <Command __id="29" _type="MoveCaretCommand" caretOffset="7081" docOffset="7722" timestamp="224314" />
  <Command __id="30" _type="MoveCaretCommand" caretOffset="7030" docOffset="7671" timestamp="226137" />
  <Command __id="31" _type="MoveCaretCommand" caretOffset="7060" docOffset="7701" timestamp="248210" />
  <Command __id="32" _type="SelectTextCommand" caretOffset="7063" docEnd="7704" docOffset="7704" docStart="7697" end="7063" start="7056" timestamp="248370" />
  <Command __id="33" _type="FileOpenCommand" projectName="null" timestamp="250381">
    <filePath><![CDATA[null]]></filePath>
  </Command>
  <Command __id="34" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.open.editor" timestamp="250390" />
  <Command __id="35" _type="MoveCaretCommand" caretOffset="0" docOffset="0" timestamp="250432" />
  <Command __id="36" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="256795">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="37" _type="SelectTextCommand" caretOffset="7063" docEnd="7704" docOffset="7704" docStart="7697" end="7063" start="7056" timestamp="256853" />
  <Command __id="38" _type="MoveCaretCommand" caretOffset="7108" docOffset="7749" timestamp="262169" />
  <Command __id="39" _type="MoveCaretCommand" caretOffset="7059" docOffset="7700" timestamp="262730" />
  <Command __id="40" _type="SelectTextCommand" caretOffset="7063" docEnd="7704" docOffset="7704" docStart="7697" end="7063" start="7056" timestamp="262882" />
  <Command __id="41" _type="MoveCaretCommand" caretOffset="7079" docOffset="7720" timestamp="267953" />
  <Command __id="42" _type="MoveCaretCommand" caretOffset="6952" docOffset="7593" timestamp="269354" />
  <Command __id="43" _type="MoveCaretCommand" caretOffset="6902" docOffset="7543" timestamp="270881" />
  <Command __id="44" _type="SelectTextCommand" caretOffset="6905" docEnd="7546" docOffset="7546" docStart="7537" end="6905" start="6896" timestamp="271018" />
  <Command __id="45" _type="MoveCaretCommand" caretOffset="7078" docOffset="7719" timestamp="277842" />
  <Command __id="46" _type="MoveCaretCommand" caretOffset="6900" docOffset="7541" timestamp="280026" />
  <Command __id="47" _type="SelectTextCommand" caretOffset="6905" docEnd="7546" docOffset="7546" docStart="7537" end="6905" start="6896" timestamp="280201" />
  <Command __id="48" _type="FileOpenCommand" docASTNodeCount="1774" docActiveCodeLength="10622" docExpressionCount="1044" docLength="19648" projectName="MineSweeper" timestamp="282972">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeperBoard.java]]></filePath>
    <snapshot><![CDATA[package logic;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.*;

import util.Piece;
import util.Space;

/**
 * Contains all the visible pieces in the MineSweeper game
 * 
 * @author KnightMiner
 */

public class MineSweeperBoard implements Serializable {

	/**
	 * Random number generator used to create game seeds Minefields use a sepparate
	 * object created using a specific seed
	 */
	
	public static final Random RANDOM = new Random();

	// resizable
	private transient Queue<Space> update;

	// board dimensions
	private int width, height;
	private MineGenerator data = new MineGenerator();

	private int flagCount;

	// board data
	private Piece[][] pieces;
	private boolean[][] mines;
	private boolean gameOver;
	private boolean victory;

	// determines if the first click happened yet
	private boolean firstClick;

	// determines if we have used our one cheat
	private int cheatsAllowed;
	private int cheats = 0;

	// board seed
	private long seed;

	/**
	 * Creates a new minesweaper board with the specified dimensions
	 * 
	 * @param width     Width of the board
	 * @param height    Height of the board
	 * @param mineCount Total mines
	 * @param cheats    Cheats allowed
	 */
	
	public MineSweeperBoard(int width, int height, int mineCount, int cheats) {
		this.width = width;
		this.height = height;

		this.pieces = new Piece[height][width];
		this.mines = new boolean[height][width];

		// sanity check in case the GUI fails to correct the number
		this.data.mineCount = Math.min(mineCount, width * height - 9);
		this.cheatsAllowed = this.cheats = cheats;

		update = new LinkedList<>();
	}

	/**
	 * Creates a new minesweaper board with the specified dimensions
	 * 
	 * @param width     Width of the board
	 * @param height    Height of the board
	 * @param mineCount Total mines
	 */
	
	public MineSweeperBoard(int width, int height, int mineCount) {
		this(width, height, mineCount, 1);
	}

	/* Main logic */

	/**
	 * Populates the board with mines with a random seed
	 * 
	 * @param space Space clicked
	 */
	
	public void generateMines(Space space) {
		generateMines(RANDOM.nextLong(), space);
	}

	/**
	 * Populates the board with mines
	 * 
	 * @param seed    Seed to generate mines. Two fields with the same size and seed
	 *                will have the same mines locations
	 * @param clicked space clicked when generating the mines
	 */
	
	protected void generateMines(long seed, Space clicked) {
		// store the current seed for saving games
		this.seed = seed;

		// no mines? no work
		if (data.mineCount == 0) {
			return;
		}

		// list of spaces we can still place a mine at
		List<Space> remainingSpaces = new ArrayList<>(Arrays.asList(getAllSpaces()));

		// if we clicked somewhere, remove all nearby spaces
		if (clicked != null) {
			// remove all unclickable spaces
			final int x = clicked.getX(), y = clicked.getY();
			remainingSpaces.removeIf((space) -> {
				return (y - 1) <= space.getY() && space.getY() <= (y + 1) && (x - 1) <= space.getX()
						&& space.getX() <= (x + 1);
			});
		}

		// random object seeded so results can be controlled
		Random random = new Random(seed);

		// place mines
		this.mines = new boolean[height][width];
		for (int i = 0; i < data.mineCount; i++) {
			// just get the linear location of the next mine and place it
			int mine = random.nextInt(remainingSpaces.size());
			Space space = remainingSpaces.get(mine);
			mines[space.getY()][space.getX()] = true;
			remainingSpaces.remove(mine);
		}
	}

	/**
	 * Creates a new game with the same dimensions
	 */
	
	public void newGame() {
		// first, regenerate the mines
		this.mines = new boolean[height][width];

		// next, clear game specific data
		resetData();

		// then mark all spaces for a rendering update
		for (Space space : getAllSpaces()) {
			markUpdate(space);
		}
	}

	/**
	 * Restarts the current game
	 */
	
	public void restart() {
		// if we have not clicked yet, do nothing
		// we don't have a seed to restart from
		if (!firstClick) {
			return;
		}

		// reset any relevant data
		resetData();

		// but assume we already clicked so the mines don't change
		firstClick = true;

		// and mark all spaces for an update
		for (Space space : getAllSpaces()) {
			markUpdate(space);
		}
	}

	/**
	 * Saves the board to a binary file
	 * 
	 * @param filename Location of the game
	 */
	
	public void saveGame(String filename) {
		// TODO: better saving logic
		try {
			FileOutputStream file = new FileOutputStream(filename + ".bin");
			ObjectOutputStream stream = new ObjectOutputStream(file);
			stream.writeObject(this);
			stream.flush();
			stream.close();
		} catch (IOException e) {
		}
	}

	/**
	 * Load the board from a binary file
	 * 
	 * @param filename Location of the game
	 * @return The board, or null if invalid
	 */
	
	public static MineSweeperBoard loadGame(String filename) {
		try {
			FileInputStream file = new FileInputStream(filename + ".bin");
			ObjectInputStream stream = new ObjectInputStream(file);
			MineSweeperBoard board = (MineSweeperBoard) stream.readObject();
			stream.close();
			return board;
		} catch (IOException | ClassNotFoundException e) {
			e.printStackTrace();
			return null;
		}
	}

	/**
	 * Resets generic data
	 */
	
	private void resetData() {
		this.pieces = new Piece[height][width];
		gameOver = false;
		firstClick = false;
		cheats = cheatsAllowed;
		flagCount = 0;
		victory = false;
	}

	/**
	 * Ends the game with a loss
	 * 
	 * @param clicked Location clicked causing the loss
	 * @return Mine clicked
	 */
	
	public void loseGame(Space clicked) {
		// set the game to over
		gameOver = true;

		showMines(clicked, false);
	}

	/**
	 * Checks if the game has been won, and sets the appropiate statuses
	 */
	
	public void checkVictory() {
		// check all spaces
		for (Space space : getAllSpaces()) {

			// only spaces without mines need to be checked, we don't care about
			// flags or marks on mine spaces
			if (!isMine(space)) {
				// if the piece is unclicked or not a number, we failed
				Piece piece = getPiece(space);
				if (piece == null || !piece.isNumber()) {
					return;
				}
			}
		}

		// made it through that? we won
		victory = true;
		gameOver = true;

		showMines(null, true);
	}

	/**
	 * Shows all the mines on the board
	 * 
	 * @param space   Space that was clicked
	 * @param victory Determines if the game was won or lost
	 */
	
	private void showMines(Space clicked, boolean victory) {
		// set the mine color based on victory
		Piece mine = victory ? Piece.MINE_GREEN : Piece.MINE;

		// set the clicked space to red
		if (clicked != null && isMine(clicked)) {
			setPiece(clicked, Piece.MINE_RED);
		}

		// show mines on the board
		for (Space space : getAllSpaces()) {
			if (space.equals(clicked)) {
				continue;
			}
			Piece piece = getPiece(space);
			if (isMine(space)) {
				// but only on empty or marks
				if (piece == null || piece.isMark()) {
					setPiece(space, mine);
				}
			} else {
				// if the space has a flag but no mine, mark it as such
				if (piece == Piece.FLAG) {
					setPiece(space, Piece.FLAG_NOT);
				}
			}
		}
	}

	/* Clicking */

	/**
	 * Handle standard game clicks
	 * 
	 * @param space  Space clicked
	 * @param action Type of click
	 */
	
	public void handleClick(Space space, ClickAction action) {
		// stop playing when the game is over
		if (gameOver) {
			return;
		}
		// simply passes it along to the dedicated function
		switch (action) {
		case DEFAULT:
			handleDefaultClick(space);
			break;
		case FLAG:
			handleFlagClick(space);
			break;
		case MARK:
			handleMarkClick(space);
			break;
		case CHEAT:
			handleCheatClick(space);
			break;
		}
	}

	/**
	 * Space clicking core, does the actual clicking action
	 * 
	 * @param space Space clicked
	 */
	
	private void clickSpace(Space space) {
		// if the space is not replaceable, stop now
		// called here so we don't click flags as they are mines
		if (!isReplaceable(space)) {
			return;
		}

		// if the space is a mine, we lose
		if (isMine(space)) {
			loseGame(space);
		}

		// otherwise do a normal click
		else {
			// sets the piece to the number of surrounding mines
			Piece newPiece = getNumber(space);
			setPiece(space, newPiece);

			// if the piece is 0, update surrounding pieces as none of them are mines
			// this won't eternally recur since this space is no longer clickable
			if (newPiece == Piece.N0) {
				for (Space neighbor : getNeighbors(space)) {
					clickSpace(neighbor);
				}
			}
		}
	}

	/**
	 * Default clicks, clicks a space and displays a number or loses the game
	 * 
	 * @param space Space clicked
	 */
	
	private void handleDefaultClick(Space space) {
		// first click should generate the minefield
		if (!firstClick) {
			firstClick(space);
		}

		// if the space cannot be replaced then stop here
		// as we run this function on every click
		if (isNumber(space)) {
			// if the number of flags around this space is the same as the number
			Space[] neighbors = getNeighbors(space);

			// count the flags around the piece
			int flags = 0;
			for (Space neighbor : neighbors) {
				if (getPiece(neighbor) == Piece.FLAG) {
					flags++;
				}
			}

			// same number of flags as the piece number?
			if (flags == getPiece(space).getNumber()) {
				// click all the spaces. This is a risky move if a flag is wrong
				for (Space neighbor : neighbors) {
					clickSpace(neighbor);
				}
			}
		}
		// otherwise if not a number, just click the space
		else {
			clickSpace(space);
		}

		// check just once at the end of clicking
		checkVictory();
	}

	/**
	 * Handle the first click in the game. This click will generate the minefield as
	 * it cannot be on a mine
	 * 
	 * @param space Space clicked
	 */
	
	private void firstClick(Space space) {
		generateMines(space);
		firstClick = true;
	}

	/**
	 * Flag clicks, essentially click once to add
	 * 
	 * @param space Space clicked
	 */
	
	private void handleFlagClick(Space space) {
		// if already a flag, set a mark
		Piece piece = getPiece(space);
		if (piece == Piece.FLAG) {
			setPiece(space, Piece.MARK_RED);
			flagCount--;
		}
		// remove marks
		else if (piece != null && piece.isMark()) {
			setPiece(space, null);
		}
		// otherwise if we can add one
		else if (isReplaceable(space)) {
			if(flagCount < data.mineCount) {
				setPiece(space, Piece.FLAG);
				flagCount++;
			}
		}
	}

	/**
	 * Mark clicks, changes the color of a mark
	 * 
	 * @param space Space clicked
	 */
	
	private void handleMarkClick(Space space) {
		// tobble the mark
		Piece piece = getPiece(space);
		if (piece == Piece.MARK_RED) {
			setPiece(space, Piece.MARK_GREEN);
		}
		// remove marks
		else if (piece == Piece.MARK_GREEN) {
			setPiece(space, Piece.MARK_BLUE);
		}
		// otherwise if we can add one
		else if (piece == Piece.MARK_BLUE) {
			setPiece(space, Piece.MARK_RED);
		}

		// if its a flag, remove it
		else if (piece == Piece.FLAG) {
			setPiece(space, Piece.MARK_RED);
			flagCount--;
		}

		// essentially all that is left here is null, but still
		else if (isReplaceable(space)) {
			setPiece(space, Piece.MARK_RED);
		}
	}

	/**
	 * Cheat clicks, click a space and it will show a "ghost" bomb if one exists
	 * 
	 * @param space Space clicked
	 */
	
	private void handleCheatClick(Space space) {
		// already ran, don't run again
		if (!canCheat()) {
			return;
		}

		// no mines if we have not clicked
		if (!firstClick) {
			// you cheated for the first click, useless move as now we don't care
			// about click protection
			firstClick(null);
		}

		// only marks and empty spaces can be cheated, to save accidental clicks
		Piece piece = getPiece(space);
		if (piece != null && !piece.isMark()) {
			return;
		}

		// if its a mine, show that
		if (isMine(space)) {
			setPiece(space, Piece.MINE_GREEN);
		}
		// otherwise click the space as we know its safe
		else {
			clickSpace(space);
		}

		// use a cheat
		cheats--;

		// need to check, since it could be the last click
		checkVictory();
	}

	/* Helper functions */

	/**
	 * Gets a list of all spaces
	 * 
	 * @return a list of all spaces
	 */
	
	public Space[] getAllSpaces() {
		Space[] spaces = new Space[width * height];

		// loop through all spaces, adding them to an array
		int i = 0;
		for (int y = 0; y < height; y++) {
			for (int x = 0; x < width; x++) {
				spaces[i] = new Space(x, y);
				i++;
			}
		}

		return spaces;
	}

	/**
	 * Helper function to get the coordinates of all 8 neighbors to the space Note
	 * that some may be invalid spaces
	 * 
	 * @param space Space around which to get neighbors
	 * @return an array of spaces of the 8 neighbors, or less on edges
	 */
	
	public Space[] getNeighbors(Space space) {
		// if not valid, return no neighbors
		if (!isValid(space)) {
			return new Space[0];
		}

		// array cannot be bigger than 8
		Space[] neighbors = new Space[8];
		int x = space.getX();
		int y = space.getY();

		// 2D loop from x - 1, y - 1 up to x + 1, y + 1
		int neighborCount = 0;
		for (int i = -1; i <= 1; i++) {
			for (int j = -1; j <= 1; j++) {
				// skip offset of 0,0 as that is the input space
				if (i == 0 && j == 0) {
					continue;
				}

				// make sure the space is valid before returning it
				Space neighbor = new Space(x + i, y + j);
				if (isValid(neighbor)) {
					neighbors[neighborCount] = neighbor;
					neighborCount++;
				}
			}
		}

		return neighbors;
	}

	/**
	 * Marks a space as needing update by the graphics display
	 * 
	 * @param space space needing an update
	 */
	
	public void markUpdate(Space space) {
		if (!update.contains(space)) {
			update.add(space);
		}
	}

	/**
	 * Returns the number to display on the space after clicking it Does not take
	 * bombs on this space into account, check isMine() first
	 * 
	 * @param space Space to check
	 * @return The number of bombs around this space
	 */
	
	public Piece getNumber(Space space) {
		// no space? no return
		if (!isValid(space)) {
			return null;
		}

		int count = 0;
		// check all the neighbors for a bomb
		for (Space neighbor : getNeighbors(space)) {
			// if they have one, add to the running total
			if (isMine(neighbor)) {
				count++;
			}
		}

		// return the specific piece
		return Piece.fromNumber(count);
	}

	/* Getters, setters, and basic return logic */

	/**
	 * Gets the piece on the specified space
	 * 
	 * @param space Space to check for a piece
	 * @return the piece on the specified space
	 */
	
	public Piece getPiece(Space space) {
		// invalid gets null
		if (!isValid(space)) {
			return null;
		}

		// otherwise go with the contained piece
		return pieces[space.getY()][space.getX()];
	}

	/**
	 * Placed a piece on a space
	 * 
	 * @param space Space to place the piece
	 * @param piece Piece to place on the space
	 */
	
	public void setPiece(Space space, Piece piece) {
		// must be valid
		if (isValid(space)) {
			pieces[space.getY()][space.getX()] = piece;
			markUpdate(space);
		}
	}

	/**
	 * Determines if a space contains a bomb
	 * 
	 * @param space Space to check
	 * @return True if the space contains a bomb
	 */
	
	public boolean isMine(Space space) {
		// not a valid space?
		if (!isValid(space)) {
			return false;
		}

		return mines[space.getY()][space.getX()];
	}

	/**
	 * Determines if a space appears enabled, or pressed up
	 * 
	 * @param space Space to check
	 * @return True if the space appears enabled
	 */
	
	public boolean isEnabled(Space space) {
		if (!isValid(space)) {
			return false;
		}

		Piece piece = getPiece(space);

		// if the space is empty, it pops up
		if (piece == null) {
			return true;
		}

		// otherwise go based on the contained value
		return piece.isEnabled();
	}

	/**
	 * Determines if the contents of a space can be replaced
	 * 
	 * @param space Space clicked
	 */
	
	private boolean isReplaceable(Space space) {
		// invalid spaces are always false
		if (!isValid(space)) {
			return false;
		}

		Piece piece = getPiece(space);

		// if the space is empty, it can be clicked
		if (piece == null) {
			return true;
		}

		// otherwise go based on the contained value
		return piece.isReplaceable();
	}

	/**
	 * Determines if the space is a number
	 * 
	 * @param space Space clicked
	 */
	
	private boolean isNumber(Space space) {
		// invalid spaces are always false
		if (!isValid(space)) {
			return false;
		}

		Piece piece = getPiece(space);

		// if the space is empty, it is not a number
		if (piece == null) {
			return false;
		}

		// otherwise go based on the contained value
		return piece.isNumber();
	}

	/* Data */

	/**
	 * Gets the width of the board
	 * 
	 * @return The width of the board
	 */
	
	public int getWidth() {
		return width;
	}

	/**
	 * Gets the height of the board
	 * 
	 * @return The height of the board
	 */
	
	public int getHeight() {
		return height;
	}

	/**
	 * Gets the number of mines left on the board
	 * 
	 * @return number of mines remaining
	 */
	
	public int getRemainingMines() {
		return data.mineCount - flagCount;
	}

	/**
	 * Checks if the player has used their cheat
	 * 
	 * @return if the player has used their cheat
	 */
	
	public boolean canCheat() {
		return cheats > 0;
	}

	/**
	 * Checks how many cheats the player has left
	 * 
	 * @return remaining cheats
	 */
	
	public int getCheats() {
		return cheats;
	}

	/**
	 * Checks if the game ended
	 * 
	 * @return true if the game ended
	 */
	
	public boolean gameOver() {
		return gameOver;
	}

	/**
	 * Checks if the player won the game
	 * 
	 * @return true if the player won the game
	 */
	
	public boolean hasWon() {
		return victory;
	}

	/**
	 * Checks if a space is within the bounds of this board
	 * 
	 * @param space Space to check
	 * @return true if the space is within this board
	 */
	
	public boolean isValid(Space space) {
		// no space?
		if (space == null) {
			return false;
		}

		// first, check if the space is entirely invalid
		if (space.getX() < 0 || space.getY() < 0) {
			return false;
		}

		// next, check if this is outside of this board
		if (space.getY() >= height || space.getX() >= width) {
			return false;
		}

		// fits in both? return true then
		return true;
	}

	/**
	 * Gets a list of spaces pending updates to update the button displays
	 * 
	 * @return a list of spaces needing an update
	 */
	
	public Queue<Space> getUpdates() {
		return update;
	}

	/**
	 * Actions that can be performed on click. Used by buttons to pass along a
	 * constant rather than a list of modifiers.
	 */
	
	public enum ClickAction {
		/** Normal click */
		DEFAULT,
		/** Placing a flag or mark */
		FLAG,
		/** Placing a mark of different colors */
		MARK,
		/** Safely clicking a mine */
		CHEAT;
	}
}
]]></snapshot>
  </Command>
  <Command __id="49" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.open.editor" timestamp="283002" />
  <Command __id="50" _type="SelectTextCommand" caretOffset="17953" docEnd="18180" docOffset="18180" docStart="18171" end="17953" start="17944" timestamp="283052" />
  <Command __id="51" _type="MoveCaretCommand" caretOffset="905" docOffset="1132" timestamp="305762" />
  <Command __id="52" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="307183">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="53" _type="SelectTextCommand" caretOffset="6905" docEnd="7546" docOffset="7546" docStart="7537" end="6905" start="6896" timestamp="307215" />
  <Command __id="54" _type="MoveCaretCommand" caretOffset="7030" docOffset="7671" timestamp="308826" />
  <DocumentChange __id="55" _type="Insert" docASTNodeCount="1297" docActiveCodeLength="11123" docExpressionCount="863" docLength="13995" length="11" offset="7671" timestamp="309490">
    <text><![CDATA[
        	]]></text>
  </DocumentChange>
  <DocumentChange __id="56" _type="Delete" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" endLine="266" length="11" offset="7671" repeat="10" startLine="265" timestamp="315084" timestamp2="317939">
    <text><![CDATA[
        	]]></text>
  </DocumentChange>
  <Command __id="57" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" repeat="20" timestamp="315092" timestamp2="317944" />
  <Command __id="86" _type="MoveCaretCommand" caretOffset="6900" docOffset="7541" timestamp="319897" />
  <Command __id="87" _type="SelectTextCommand" caretOffset="6905" docEnd="7546" docOffset="7546" docStart="7537" end="6905" start="6896" timestamp="320041" />
  <Command __id="88" _type="FileOpenCommand" docASTNodeCount="1774" docActiveCodeLength="10622" docExpressionCount="1044" docLength="19648" projectName="MineSweeper" timestamp="321870">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeperBoard.java]]></filePath>
  </Command>
  <Command __id="89" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.open.editor" timestamp="321893" />
  <Command __id="90" _type="SelectTextCommand" caretOffset="17953" docEnd="18180" docOffset="18180" docStart="18171" end="17953" start="17944" timestamp="321928" />
  <Command __id="91" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="328440">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="92" _type="SelectTextCommand" caretOffset="6905" docEnd="7546" docOffset="7546" docStart="7537" end="6905" start="6896" timestamp="328471" />
  <Command __id="93" _type="FileOpenCommand" docASTNodeCount="1774" docActiveCodeLength="10622" docExpressionCount="1044" docLength="19648" projectName="MineSweeper" timestamp="331100">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeperBoard.java]]></filePath>
  </Command>
  <Command __id="94" _type="SelectTextCommand" caretOffset="17953" docEnd="18180" docOffset="18180" docStart="18171" end="17953" start="17944" timestamp="331132" />
  <Command __id="95" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="334541">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="96" _type="SelectTextCommand" caretOffset="6905" docEnd="7546" docOffset="7546" docStart="7537" end="6905" start="6896" timestamp="334578" />
  <Command __id="97" _type="FileOpenCommand" docASTNodeCount="1774" docActiveCodeLength="10622" docExpressionCount="1044" docLength="19648" projectName="MineSweeper" timestamp="335842">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeperBoard.java]]></filePath>
  </Command>
  <Command __id="98" _type="SelectTextCommand" caretOffset="17953" docEnd="18180" docOffset="18180" docStart="18171" end="17953" start="17944" timestamp="335878" />
  <Command __id="99" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="342638">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="100" _type="SelectTextCommand" caretOffset="6905" docEnd="7546" docOffset="7546" docStart="7537" end="6905" start="6896" timestamp="342678" />
  <Command __id="101" _type="MoveCaretCommand" caretOffset="7079" docOffset="7720" timestamp="345769" />
  <Command __id="102" _type="MoveCaretCommand" caretOffset="7058" docOffset="7699" timestamp="347762" />
  <Command __id="103" _type="SelectTextCommand" caretOffset="7063" docEnd="7704" docOffset="7704" docStart="7697" end="7063" start="7056" timestamp="347945" />
  <Command __id="104" _type="MoveCaretCommand" caretOffset="7081" docOffset="7722" timestamp="358489" />
  <Command __id="105" _type="MoveCaretCommand" caretOffset="7136" docOffset="7777" timestamp="359129" />
  <Command __id="106" _type="MoveCaretCommand" caretOffset="7125" docOffset="7766" timestamp="359667" />
  <Command __id="107" _type="MoveCaretCommand" caretOffset="7081" docOffset="7722" timestamp="360201" />
  <Command __id="108" _type="FileOpenCommand" docASTNodeCount="1774" docActiveCodeLength="10622" docExpressionCount="1044" docLength="19648" projectName="MineSweeper" timestamp="365387">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeperBoard.java]]></filePath>
  </Command>
  <Command __id="109" _type="SelectTextCommand" caretOffset="17953" docEnd="18180" docOffset="18180" docStart="18171" end="17953" start="17944" timestamp="365436" />
  <Command __id="110" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="370387">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="111" _type="MoveCaretCommand" caretOffset="7081" docOffset="7722" timestamp="370421" />
  <Command __id="112" _type="RunCommand" exitValue="0" kind="Terminate" projectName="MineSweeper" timestamp="381529" type="Run" />
  <Command __id="113" _type="RunCommand" kind="Create" projectName="MineSweeper" timestamp="384410" type="Run" />
  <Command __id="114" _type="MoveCaretCommand" caretOffset="7030" docOffset="7671" timestamp="429177" />
  <Command __id="115" _type="MoveCaretCommand" caretOffset="6865" docOffset="7506" timestamp="441689" />
  <Command __id="116" _type="SelectTextCommand" caretOffset="6868" docEnd="7509" docOffset="7509" docStart="7498" end="6868" start="6857" timestamp="441833" />
  <Command __id="117" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.open.editor" timestamp="444023" />
  <Command __id="118" _type="MoveCaretCommand" caretOffset="3875" docOffset="4516" timestamp="470097" />
  <Command __id="119" _type="MoveCaretCommand" caretOffset="3925" docOffset="4566" timestamp="471177" />
  <Command __id="120" _type="MoveCaretCommand" caretOffset="3960" docOffset="4601" timestamp="471666" />
  <Command __id="121" _type="MoveCaretCommand" caretOffset="3801" docOffset="4442" timestamp="482145" />
  <Command __id="122" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" repeat="2" timestamp="488821" timestamp2="488821" />
  <Command __id="124" _type="FileOpenCommand" docASTNodeCount="1774" docActiveCodeLength="10622" docExpressionCount="1044" docLength="19648" projectName="MineSweeper" timestamp="491804">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeperBoard.java]]></filePath>
  </Command>
  <Command __id="125" _type="SelectTextCommand" caretOffset="17953" docEnd="18180" docOffset="18180" docStart="18171" end="17953" start="17944" timestamp="491838" />
  <Command __id="126" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="493423">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="127" _type="MoveCaretCommand" caretOffset="3802" docOffset="4443" timestamp="493456" />
  <Command __id="128" _type="MoveCaretCommand" caretOffset="4016" docOffset="4657" timestamp="495177" />
  <Command __id="129" _type="MoveCaretCommand" caretOffset="6653" docOffset="7294" timestamp="525683" />
  <Command __id="130" _type="MoveCaretCommand" caretOffset="7070" docOffset="7711" timestamp="533753" />
  <Command __id="131" _type="MoveCaretCommand" caretOffset="7057" docOffset="7698" timestamp="546129" />
  <Command __id="132" _type="MoveCaretCommand" caretOffset="7044" docOffset="7685" timestamp="547833" />
  <DocumentChange __id="133" _type="Insert" docASTNodeCount="1292" docActiveCodeLength="11075" docExpressionCount="859" docLength="13987" length="3" offset="7685" repeat="3" timestamp="549930" timestamp2="550340">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="134" _type="InsertStringCommand" repeat="6" timestamp="549945" timestamp2="550343">
    <data><![CDATA[////  ]]></data>
  </Command>
  <Command __id="142" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" timestamp="551258" />
  <Command __id="143" _type="RunCommand" kind="Create" projectName="MineSweeper" timestamp="552911" type="Run" />
  <DocumentChange __id="144" _type="Delete" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" endLine="266" length="3" offset="7685" repeat="3" startLine="266" timestamp="567643" timestamp2="568002">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="145" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" repeat="6" timestamp="567646" timestamp2="568004" />
  <Command __id="153" _type="MoveCaretCommand" caretOffset="7030" docOffset="7671" timestamp="572825" />
  <Command __id="154" _type="SelectTextCommand" caretOffset="7026" docEnd="7777" docOffset="7667" docStart="7667" end="7136" start="7026" timestamp="588425" />
  <DocumentChange __id="155" _type="Insert" docASTNodeCount="1294" docActiveCodeLength="11098" docExpressionCount="860" docLength="13986" length="2" offset="7657" timestamp="591300">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="156" _type="Insert" docASTNodeCount="1289" docActiveCodeLength="11049" docExpressionCount="856" docLength="13988" length="2" offset="7675" timestamp="591304">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="157" _type="Insert" docASTNodeCount="1284" docActiveCodeLength="11007" docExpressionCount="852" docLength="13990" length="2" offset="7728" timestamp="591309">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="158" _type="Insert" docASTNodeCount="1286" docActiveCodeLength="10998" docExpressionCount="855" docLength="13992" length="2" offset="7774" timestamp="591311">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="159" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" timestamp="591322" />
  <Command __id="160" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" timestamp="592933" />
  <Command __id="161" _type="RunCommand" kind="Create" projectName="MineSweeper" timestamp="594868" type="Run" />
  <Command __id="162" _type="RunCommand" exitValue="0" kind="Terminate" projectName="MineSweeper" timestamp="637426" type="Run" />
  <Command __id="163" _type="MoveCaretCommand" caretOffset="6900" docOffset="7541" timestamp="638457" />
  <Command __id="164" _type="SelectTextCommand" caretOffset="6905" docEnd="7546" docOffset="7546" docStart="7537" end="6905" start="6896" timestamp="638609" />
  <Command __id="165" _type="FileOpenCommand" docASTNodeCount="1774" docActiveCodeLength="10622" docExpressionCount="1044" docLength="19648" projectName="MineSweeper" timestamp="639341">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeperBoard.java]]></filePath>
  </Command>
  <Command __id="166" _type="SelectTextCommand" caretOffset="17953" docEnd="18180" docOffset="18180" docStart="18171" end="17953" start="17944" timestamp="639376" />
  <Command __id="167" _type="FileOpenCommand" docASTNodeCount="1286" docActiveCodeLength="10998" docExpressionCount="855" docLength="13992" projectName="MineSweeper" timestamp="649715">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="168" _type="SelectTextCommand" caretOffset="6905" docEnd="7546" docOffset="7546" docStart="7537" end="6905" start="6896" timestamp="649747" />
  <Command __id="169" _type="SelectTextCommand" caretOffset="7144" docEnd="7785" docOffset="7785" docStart="7614" end="7144" start="6973" timestamp="654330" />
  <DocumentChange __id="170" _type="Delete" docASTNodeCount="1300" docActiveCodeLength="11037" docExpressionCount="861" docLength="13990" endLine="264" length="2" offset="7614" startLine="264" timestamp="656447">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="171" _type="Delete" docASTNodeCount="1299" docActiveCodeLength="11051" docExpressionCount="861" docLength="13988" endLine="265" length="2" offset="7655" startLine="265" timestamp="656455">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="172" _type="Delete" docASTNodeCount="1304" docActiveCodeLength="11100" docExpressionCount="865" docLength="13986" endLine="266" length="2" offset="7671" startLine="266" timestamp="656461">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="173" _type="Delete" docASTNodeCount="1309" docActiveCodeLength="11142" docExpressionCount="869" docLength="13984" endLine="267" length="2" offset="7722" startLine="267" timestamp="656465">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="174" _type="Delete" docASTNodeCount="1309" docActiveCodeLength="11151" docExpressionCount="869" docLength="13982" endLine="268" length="2" offset="7766" startLine="268" timestamp="656468">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="175" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" timestamp="656479" />
  <Command __id="176" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" timestamp="657624" />
  <Command __id="177" _type="MoveCaretCommand" caretOffset="7028" docOffset="7669" timestamp="659185" />
  <Command __id="178" _type="MoveCaretCommand" caretOffset="6974" docOffset="7615" timestamp="659897" />
  <Command __id="179" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" repeat="2" timestamp="660731" timestamp2="660731" />
  <DocumentChange __id="181" _type="Insert" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" length="2" offset="7614" repeat="2" timestamp="661183" timestamp2="661300">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="182" _type="InsertStringCommand" repeat="4" timestamp="661186" timestamp2="661303">
    <data><![CDATA[////]]></data>
  </Command>
  <Command __id="187" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" timestamp="662608" />
  <Command __id="188" _type="MoveCaretCommand" caretOffset="7063" docOffset="7704" timestamp="667529" />
  <Command __id="189" _type="MoveCaretCommand" caretOffset="7165" docOffset="7806" timestamp="671801" />
  <Command __id="190" _type="SelectTextCommand" caretOffset="7136" docEnd="7806" docOffset="7777" docStart="7777" end="7165" start="7136" timestamp="677337" />
  <Command __id="191" _type="MoveCaretCommand" caretOffset="7152" docOffset="7793" timestamp="678021" />
  <Command __id="192" _type="SelectTextCommand" caretOffset="7156" docEnd="7797" docOffset="7797" docStart="7787" end="7156" start="7146" timestamp="678177" />
  <Command __id="193" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.open.editor" timestamp="679597" />
  <Command __id="194" _type="MoveCaretCommand" caretOffset="3542" docOffset="4183" timestamp="690985" />
  <Command __id="195" _type="RunCommand" kind="Create" projectName="MineSweeper" timestamp="691683" type="Run" />
  <Command __id="196" _type="MoveCaretCommand" caretOffset="7125" docOffset="7766" timestamp="697249" />
  <Command __id="197" _type="MoveCaretCommand" caretOffset="7165" docOffset="7806" timestamp="699217" />
  <Command __id="198" _type="MoveCaretCommand" caretOffset="7030" docOffset="7671" timestamp="708289" />
  <Command __id="199" _type="SelectTextCommand" caretOffset="7136" docEnd="7806" docOffset="7777" docStart="7777" end="7165" start="7136" timestamp="711177" />
  <DocumentChange __id="200" _type="Delete" docASTNodeCount="1293" docActiveCodeLength="11083" docExpressionCount="860" docLength="13955" endLine="269" length="29" offset="7777" startLine="268" timestamp="712930">
    <text><![CDATA[
        isCheating = false;]]></text>
  </DocumentChange>
  <Command __id="201" _type="CutCommand" timestamp="712946" />
  <Command __id="202" _type="MoveCaretCommand" caretOffset="6952" docOffset="7593" timestamp="713945" />
  <DocumentChange __id="203" _type="Insert" docASTNodeCount="1297" docActiveCodeLength="11116" docExpressionCount="863" docLength="13988" length="33" offset="7593" timestamp="714524">
    <text><![CDATA[
            isCheating = false;]]></text>
  </DocumentChange>
  <Command __id="204" _type="PasteCommand" timestamp="714546" />
  <Command __id="205" _type="MoveCaretCommand" caretOffset="7063" docOffset="7704" timestamp="715706" />
  <DocumentChange __id="206" _type="Insert" docASTNodeCount="1297" docActiveCodeLength="11127" docExpressionCount="863" docLength="13999" length="11" offset="7704" timestamp="716333">
    <text><![CDATA[
        	]]></text>
  </DocumentChange>
  <Command __id="207" _type="InsertStringCommand" timestamp="716336">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="208" _type="InsertStringCommand" timestamp="716336">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="209" _type="Insert" docASTNodeCount="1301" docActiveCodeLength="11145" docExpressionCount="866" docLength="14017" length="18" offset="7715" repeat="18" timestamp="716723" timestamp2="720347">
    <text><![CDATA[isCheating = true;]]></text>
  </DocumentChange>
  <Command __id="210" _type="InsertStringCommand" repeat="36" timestamp="716725" timestamp2="720350">
    <data><![CDATA[iissCChheeaattiinngg  ==  ttrruuee;;]]></data>
  </Command>
  <Command __id="263" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" timestamp="720839" />
  <Command __id="264" _type="RunCommand" exitValue="0" kind="Terminate" projectName="MineSweeper" timestamp="724935" type="Run" />
  <Command __id="265" _type="RunCommand" exitValue="0" kind="Terminate" projectName="MineSweeper" timestamp="726912" type="Run" />
  <Command __id="266" _type="RunCommand" exitValue="0" kind="Terminate" projectName="MineSweeper" timestamp="728616" type="Run" />
  <Command __id="267" _type="RunCommand" kind="Create" projectName="MineSweeper" timestamp="729637" type="Run" />
  <DocumentChange __id="268" _type="Delete" docASTNodeCount="1297" docActiveCodeLength="11116" docExpressionCount="863" docLength="13988" endLine="267" length="29" offset="7704" startLine="266" timestamp="737572">
    <text><![CDATA[
        	isCheating = true;]]></text>
  </DocumentChange>
  <Command __id="269" _type="UndoCommand" repeat="3" timestamp="737594" timestamp2="738391" />
  <DocumentChange __id="270" _type="Delete" docASTNodeCount="1293" docActiveCodeLength="11083" docExpressionCount="860" docLength="13955" endLine="263" length="33" offset="7593" startLine="262" timestamp="737864">
    <text><![CDATA[
            isCheating = false;]]></text>
  </DocumentChange>
  <DocumentChange __id="272" _type="Insert" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" length="29" offset="7777" timestamp="738388">
    <text><![CDATA[
        isCheating = false;]]></text>
  </DocumentChange>
  <Command __id="274" _type="MoveCaretCommand" caretOffset="8474" docOffset="9115" timestamp="782970" />
  <Command __id="275" _type="MoveCaretCommand" caretOffset="8541" docOffset="9182" timestamp="785385" />
  <Command __id="276" _type="SelectTextCommand" caretOffset="8490" docEnd="9182" docOffset="9131" docStart="9131" end="8541" start="8490" timestamp="791171" />
  <DocumentChange __id="277" _type="Delete" docASTNodeCount="1294" docActiveCodeLength="11083" docExpressionCount="861" docLength="13933" endLine="331" length="51" offset="9131" startLine="330" timestamp="792213">
    <text><![CDATA[// and clear game data
            resetButtons();]]></text>
  </DocumentChange>
  <Command __id="278" _type="CutCommand" timestamp="792219" />
  <Command __id="279" _type="MoveCaretCommand" caretOffset="8423" docOffset="9064" timestamp="793737" />
  <DocumentChange __id="280" _type="Insert" docASTNodeCount="1294" docActiveCodeLength="11094" docExpressionCount="861" docLength="13944" length="11" offset="9064" timestamp="794356">
    <text><![CDATA[
        	]]></text>
  </DocumentChange>
  <Command __id="281" _type="InsertStringCommand" timestamp="794360">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="282" _type="InsertStringCommand" timestamp="794360">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="283" _type="Insert" docASTNodeCount="1294" docActiveCodeLength="11105" docExpressionCount="861" docLength="13955" length="11" offset="9075" timestamp="794491">
    <text><![CDATA[
        	]]></text>
  </DocumentChange>
  <Command __id="284" _type="InsertStringCommand" timestamp="794500">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="285" _type="InsertStringCommand" timestamp="794501">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="286" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" repeat="4" timestamp="795171" timestamp2="795325" />
  <DocumentChange __id="290" _type="Delete" docASTNodeCount="1294" docActiveCodeLength="11101" docExpressionCount="861" docLength="13951" endLine="327" length="4" offset="9060" startLine="327" timestamp="795950">
    <text><![CDATA[    ]]></text>
  </DocumentChange>
  <DocumentChange __id="291" _type="Insert" docASTNodeCount="1294" docActiveCodeLength="11105" docExpressionCount="861" docLength="13955" length="52" offset="9060" timestamp="795951">
    <text><![CDATA[	// and clear game data
            resetButtons();]]></text>
  </DocumentChange>
  <Command __id="292" _type="PasteCommand" timestamp="795957" />
  <Command __id="293" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" timestamp="797293" />
  <Command __id="294" _type="RunCommand" kind="Create" projectName="MineSweeper" timestamp="798852" type="Run" />
  <Command __id="295" _type="MoveCaretCommand" caretOffset="8482" docOffset="9123" timestamp="807562" />
  <DocumentChange __id="296" _type="Replace" docASTNodeCount="1294" docActiveCodeLength="11105" docExpressionCount="861" docLength="13955" endLine="328" insertionLength="4" int_docASTNodeCount="1294" int_docActiveCodeLength="11101" int_docExpressionCount="861" int_docLength="13951" length="52" offset="9060" startLine="327" timestamp="808258">
    <deletedText><![CDATA[	// and clear game data
            resetButtons();]]></deletedText>
    <insertedText><![CDATA[    ]]></insertedText>
  </DocumentChange>
  <Command __id="297" _type="UndoCommand" repeat="3" timestamp="808269" timestamp2="809015" />
  <DocumentChange __id="298" _type="Delete" docASTNodeCount="1294" docActiveCodeLength="11083" docExpressionCount="861" docLength="13933" endLine="329" length="22" offset="9064" startLine="327" timestamp="808650">
    <text><![CDATA[
        	
        	]]></text>
  </DocumentChange>
  <DocumentChange __id="300" _type="Insert" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" length="51" offset="9131" timestamp="809012">
    <text><![CDATA[// and clear game data
            resetButtons();]]></text>
  </DocumentChange>
  <Command __id="302" _type="MoveCaretCommand" caretOffset="8512" docOffset="9153" timestamp="810057" />
  <Command __id="303" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" timestamp="817367" />
  <Command __id="304" _type="RunCommand" kind="Create" projectName="MineSweeper" timestamp="818450" type="Run" />
  <Command __id="305" _type="FileOpenCommand" docASTNodeCount="1774" docActiveCodeLength="10622" docExpressionCount="1044" docLength="19648" projectName="MineSweeper" timestamp="827618">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeperBoard.java]]></filePath>
  </Command>
  <Command __id="306" _type="SelectTextCommand" caretOffset="17953" docEnd="18180" docOffset="18180" docStart="18171" end="17953" start="17944" timestamp="827656" />
  <Command __id="307" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="828897">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="308" _type="SelectTextCommand" caretOffset="7340" docEnd="7981" docOffset="7981" docStart="7959" end="7340" start="7318" timestamp="828928" />
  <Command __id="309" _type="FileOpenCommand" docASTNodeCount="260" docActiveCodeLength="2374" docExpressionCount="151" docLength="3681" projectName="MineSweeper" timestamp="829464">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeper.java]]></filePath>
  </Command>
  <Command __id="310" _type="MoveCaretCommand" caretOffset="1312" docOffset="1415" timestamp="829507" />
  <Command __id="311" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="832236">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="312" _type="SelectTextCommand" caretOffset="8541" docEnd="9182" docOffset="9182" docStart="9155" end="8541" start="8514" timestamp="832287" />
  <Command __id="313" _type="MoveCaretCommand" caretOffset="7030" docOffset="7671" timestamp="846897" />
  <Command __id="314" _type="FileOpenCommand" docASTNodeCount="1774" docActiveCodeLength="10622" docExpressionCount="1044" docLength="19648" projectName="MineSweeper" timestamp="848468">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeperBoard.java]]></filePath>
  </Command>
  <Command __id="315" _type="SelectTextCommand" caretOffset="17953" docEnd="18180" docOffset="18180" docStart="18171" end="17953" start="17944" timestamp="848504" />
  <Command __id="317" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="18180" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="860385" wrapSearch="true">
    <searchString><![CDATA[chea]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="318" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="1076" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="866339" wrapSearch="true">
    <searchString><![CDATA[chea]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="319" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="1386" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="870077" wrapSearch="true">
    <searchString><![CDATA[chea]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="320" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="1774" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="872707" wrapSearch="true">
    <searchString><![CDATA[chea]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="321" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="5731" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="874662" wrapSearch="true">
    <searchString><![CDATA[chea]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="322" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="12066" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="874891" wrapSearch="true">
    <searchString><![CDATA[chea]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="323" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="12563" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="884227" wrapSearch="true">
    <searchString><![CDATA[chea]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="324" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="17936" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="893828" wrapSearch="true">
    <searchString><![CDATA[chea]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="325" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="904706">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="326" _type="MoveCaretCommand" caretOffset="7030" docOffset="7671" timestamp="904739" />
  <Command __id="327" _type="MoveCaretCommand" caretOffset="7079" docOffset="7720" timestamp="915346" />
  <Command __id="328" _type="FileOpenCommand" docASTNodeCount="1774" docActiveCodeLength="10622" docExpressionCount="1044" docLength="19648" projectName="MineSweeper" timestamp="921621">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\logic\MineSweeperBoard.java]]></filePath>
  </Command>
  <Command __id="329" _type="SelectTextCommand" caretOffset="17972" docEnd="18199" docOffset="18199" docStart="18195" end="17972" start="17968" timestamp="921653" />
  <Command __id="330" _type="FileOpenCommand" docASTNodeCount="1297" docActiveCodeLength="11112" docExpressionCount="863" docLength="13984" projectName="MineSweeper" timestamp="945825">
    <filePath><![CDATA[C:\Users\Eye-tracking\git\MineSweeper-Experiment\src\presentation\MineSweeperGui.java]]></filePath>
  </Command>
  <Command __id="331" _type="MoveCaretCommand" caretOffset="7079" docOffset="7720" timestamp="945856" />
  <Command __id="332" _type="MoveCaretCommand" caretOffset="7111" docOffset="7752" timestamp="948026" />
  <Command __id="333" _type="SelectTextCommand" caretOffset="7117" docEnd="7758" docOffset="7758" docStart="7748" end="7117" start="7107" timestamp="948193" />
  <Command __id="334" _type="RunCommand" exitValue="0" kind="Terminate" projectName="MineSweeper" timestamp="966304" type="Run" />
  <Command __id="335" _type="RunCommand" exitValue="0" kind="Terminate" projectName="MineSweeper" timestamp="968110" type="Run" />
  <Command __id="336" _type="RunCommand" exitValue="0" kind="Terminate" projectName="MineSweeper" timestamp="969943" type="Run" />
  <Command __id="337" _type="MoveCaretCommand" caretOffset="7051" docOffset="7692" timestamp="979466" />
  <Command __id="338" _type="SelectTextCommand" caretOffset="7055" docEnd="7696" docOffset="7696" docStart="7685" end="7055" start="7044" timestamp="979634" />
  <Command __id="339" _type="MoveCaretCommand" caretOffset="6653" docOffset="7294" timestamp="1019048" />
  <Command __id="340" _type="MoveCaretCommand" caretOffset="7125" docOffset="7766" timestamp="1029186" />
  <Command __id="341" _type="MoveCaretCommand" caretOffset="7030" docOffset="7671" timestamp="1036401" />
  <Command __id="342" _type="MoveCaretCommand" caretOffset="6866" docOffset="7507" timestamp="1056809" />
  <Command __id="343" _type="SelectTextCommand" caretOffset="6868" docEnd="7509" docOffset="7509" docStart="7498" end="6868" start="6857" timestamp="1057001" />
  <Command __id="344" _type="MoveCaretCommand" caretOffset="7565" docOffset="8206" timestamp="1081393" />
  <Command __id="345" _type="SelectTextCommand" caretOffset="7570" docEnd="8211" docOffset="8211" docStart="8198" end="7570" start="7557" timestamp="1081681" />
  <Command __id="346" _type="MoveCaretCommand" caretOffset="7374" docOffset="8015" timestamp="1083913" />
  <Command __id="347" _type="MoveCaretCommand" caretOffset="7567" docOffset="8208" timestamp="1084416" />
  <Command __id="348" _type="SelectTextCommand" caretOffset="7570" docEnd="8211" docOffset="8211" docStart="8198" end="7570" start="7557" timestamp="1084569" />
  <Command __id="351" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="8211" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="1090564" wrapSearch="true">
    <searchString><![CDATA[buttonNewGame]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="352" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="9047" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="1093643" wrapSearch="true">
    <searchString><![CDATA[buttonNewGame]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="353" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="1111" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="1094819" wrapSearch="true">
    <searchString><![CDATA[buttonNewGame]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="354" _type="MoveCaretCommand" caretOffset="3417" docOffset="4058" timestamp="1097001" />
  <Command __id="355" _type="MoveCaretCommand" caretOffset="3369" docOffset="4010" timestamp="1103921" />
  <Command __id="356" _type="SelectTextCommand" caretOffset="3319" docEnd="4010" docOffset="3960" docStart="3960" end="3369" start="3319" timestamp="1104881" />
  <Command __id="357" _type="CopyCommand" timestamp="1105797" />
  <Command __id="358" _type="MoveCaretCommand" caretOffset="6768" docOffset="7409" timestamp="1111682" />
  <DocumentChange __id="359" _type="Insert" docASTNodeCount="1304" docActiveCodeLength="11162" docExpressionCount="868" docLength="14034" length="50" offset="7409" timestamp="1112712">
    <text><![CDATA[
        buttonNewGame = new JButton("New game");]]></text>
  </DocumentChange>
  <Command __id="360" _type="PasteCommand" timestamp="1112721" />
  <Command __id="361" _type="MoveCaretCommand" caretOffset="6790" docOffset="7431" timestamp="1114976" />
  <DocumentChange __id="362" _type="Delete" docASTNodeCount="1304" docActiveCodeLength="11155" docExpressionCount="868" docLength="14027" endLine="259" length="7" offset="7425" repeat="7" startLine="259" timestamp="1115809" timestamp2="1117265">
    <text><![CDATA[NewGame]]></text>
  </DocumentChange>
  <Command __id="363" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" timestamp="1115813" />
  <Command __id="365" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" repeat="12" timestamp="1116268" timestamp2="1117270" />
  <DocumentChange __id="382" _type="Insert" docASTNodeCount="1304" docActiveCodeLength="11160" docExpressionCount="868" docLength="14032" length="5" offset="7425" repeat="5" timestamp="1119734" timestamp2="1120387">
    <text><![CDATA[Cheat]]></text>
  </DocumentChange>
  <Command __id="383" _type="InsertStringCommand" repeat="10" timestamp="1119736" timestamp2="1120389">
    <data><![CDATA[CChheeaatt]]></data>
  </Command>
  <Command __id="397" _type="MoveCaretCommand" caretOffset="6812" docOffset="7453" timestamp="1122521" />
  <Command __id="398" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" repeat="2" timestamp="1124762" timestamp2="1124762" />
  <DocumentChange __id="400" _type="Delete" docASTNodeCount="1304" docActiveCodeLength="11152" docExpressionCount="868" docLength="14024" endLine="259" length="8" offset="7446" repeat="8" startLine="259" timestamp="1125459" timestamp2="1126595">
    <text><![CDATA[New game]]></text>
  </DocumentChange>
  <Command __id="401" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" repeat="16" timestamp="1125460" timestamp2="1126596" />
  <DocumentChange __id="424" _type="Insert" docASTNodeCount="1304" docActiveCodeLength="11154" docExpressionCount="868" docLength="14026" length="2" offset="7446" repeat="2" timestamp="1133739" timestamp2="1133875">
    <text><![CDATA[Hi]]></text>
  </DocumentChange>
  <Command __id="425" _type="InsertStringCommand" repeat="4" timestamp="1133742" timestamp2="1133877">
    <data><![CDATA[HHii]]></data>
  </Command>
  <Command __id="430" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" timestamp="1134921" />
  <Command __id="431" _type="RunCommand" kind="Create" projectName="MineSweeper" timestamp="1137304" type="Run" />
  <Command __id="432" _type="RunCommand" exitValue="0" kind="Terminate" projectName="MineSweeper" timestamp="1152903" type="Run" />
  <Command __id="433" _type="MoveCaretCommand" caretOffset="3339" docOffset="3980" timestamp="1160913" />
  <Command __id="434" _type="SelectTextCommand" caretOffset="3342" docEnd="3983" docOffset="3983" docStart="3970" end="3342" start="3329" timestamp="1161042" />
  <Command __id="435" _type="SelectTextCommand" caretOffset="3369" docEnd="4058" docOffset="4010" docStart="4010" end="3417" start="3369" timestamp="1164553" />
  <Command __id="436" _type="CopyCommand" timestamp="1165683" />
  <Command __id="437" _type="MoveCaretCommand" caretOffset="6810" docOffset="7451" timestamp="1171136" />
  <DocumentChange __id="438" _type="Insert" docASTNodeCount="1304" docActiveCodeLength="11164" docExpressionCount="868" docLength="14036" length="10" offset="7451" timestamp="1171886">
    <text><![CDATA[
        ]]></text>
  </DocumentChange>
  <Command __id="439" _type="InsertStringCommand" timestamp="1171892">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="440" _type="InsertStringCommand" timestamp="1171892">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="441" _type="Delete" docASTNodeCount="1304" docActiveCodeLength="11156" docExpressionCount="868" docLength="14028" endLine="260" length="8" offset="7453" startLine="260" timestamp="1172149">
    <text><![CDATA[        ]]></text>
  </DocumentChange>
  <DocumentChange __id="442" _type="Insert" docASTNodeCount="1304" docActiveCodeLength="11164" docExpressionCount="868" docLength="14036" length="48" offset="7453" timestamp="1172150">
    <text><![CDATA[
        buttonNewGame.addActionListener(this);]]></text>
  </DocumentChange>
  <Command __id="443" _type="PasteCommand" timestamp="1172157" />
  <Command __id="444" _type="MoveCaretCommand" caretOffset="6812" docOffset="7453" timestamp="1173457" />
  <DocumentChange __id="445" _type="Delete" docASTNodeCount="1309" docActiveCodeLength="11202" docExpressionCount="872" docLength="14074" endLine="260" length="2" offset="7451" startLine="259" timestamp="1174039">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="446" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" repeat="2" timestamp="1174044" timestamp2="1174044" />
  <Command __id="448" _type="EclipseCommand" commandID="org.eclipse.ui.file.saveAll" timestamp="1174857" />
  <Command __id="449" _type="MoveCaretCommand" caretOffset="499" docOffset="1140" timestamp="1180945" />
  <Command __id="450" _type="SelectTextCommand" caretOffset="504" docEnd="1145" docOffset="1145" docStart="1134" end="504" start="493" timestamp="1181081" />
  <Command __id="452" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="1145" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="1184695" wrapSearch="true">
    <searchString><![CDATA[buttonCheat]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="453" _type="SelectTextCommand" caretOffset="3925" docEnd="4601" docOffset="4566" docStart="4566" end="3960" start="3925" timestamp="1207841" />
  <Command __id="454" _type="CopyCommand" timestamp="1208788" />
  <Command __id="455" _type="FindCommand" caseSensitive="true" forward="true" matchWord="false" offset="4601" regexp="false" replaceAll="false" selection="Find" selectionScope="false" timestamp="1210300" wrapSearch="true">
    <searchString><![CDATA[buttonCheat]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="456" _type="MoveCaretCommand" caretOffset="6858" docOffset="7499" timestamp="1213353" />
  <DocumentChange __id="457" _type="Insert" docASTNodeCount="1314" docActiveCodeLength="11233" docExpressionCount="876" docLength="14105" length="31" offset="7499" timestamp="1214318">
    <text><![CDATA[
        top.add(buttonCheat);]]></text>
  </DocumentChange>
  <Command __id="458" _type="PasteCommand" timestamp="1214324" />
  <Command __id="459" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" timestamp="1215704" />
  <Command __id="460" _type="MoveCaretCommand" caretOffset="6869" docOffset="7510" timestamp="1217011" />
  <Command __id="461" _type="SelectTextCommand" caretOffset="6871" docEnd="7512" docOffset="7512" docStart="7509" end="6871" start="6868" timestamp="1217161" />
  <Command __id="462" _type="MoveCaretCommand" caretOffset="3960" docOffset="4601" timestamp="1235145" />
  <Command __id="463" _type="MoveCaretCommand" caretOffset="4016" docOffset="4657" timestamp="1235833" />
  <Command __id="464" _type="SelectTextCommand" caretOffset="3847" docEnd="4601" docOffset="4488" docStart="4488" end="3960" start="3847" timestamp="1249049" />
  <Command __id="465" _type="SelectTextCommand" caretOffset="3773" docEnd="4414" docOffset="4414" docStart="4379" end="3773" start="3738" timestamp="1284738" />
  <Command __id="466" _type="EclipseCommand" commandID="org.eclipse.tm.terminal.connector.local.command.launch" timestamp="1300747" />
  <Command __id="467" _type="ShellBoundsCommand" bounds="[-8, -8, 1936, 1056]" timestamp="1330837" />
</Events>
